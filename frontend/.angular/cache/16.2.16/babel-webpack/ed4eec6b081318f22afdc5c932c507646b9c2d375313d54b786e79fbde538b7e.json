{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/lkama/IdeaProjects/banking-app/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(fb, accountService) {\n    this.fb = fb;\n    this.accountService = accountService;\n    this.errorMessage = '';\n    this.isLoading = false;\n    this.loginForm = this.fb.group({\n      username: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (_this.loginForm.invalid) return;\n      _this.isLoading = true;\n      _this.errorMessage = '';\n      try {\n        yield _this.accountService.createAccount(_this.loginForm.value).toPromise();\n        // Handle success (e.g., redirect, show message)\n      } catch (err) {\n        _this.errorMessage = err?.error?.message || 'Account creation failed';\n      } finally {\n        _this.isLoading = false;\n      }\n    })();\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","fb","accountService","errorMessage","isLoading","loginForm","group","username","required","email","password","login","_this","_asyncToGenerator","invalid","createAccount","value","toPromise","err","error","message","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\lkama\\IdeaProjects\\banking-app\\frontend\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { AccountService } from 'src/app/services/account.service';\r\nimport { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n  loginForm: FormGroup;\r\n  errorMessage: string = '';\r\n  isLoading: boolean = false;\r\n\r\n  constructor(private fb: FormBuilder, private accountService: AccountService) {\r\n    this.loginForm = this.fb.group({\r\n      username: ['', Validators.required],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  async login() {\r\n    if (this.loginForm.invalid) return;\r\n    this.isLoading = true;\r\n    this.errorMessage = '';\r\n    try {\r\n      await this.accountService.createAccount(this.loginForm.value).toPromise();\r\n      // Handle success (e.g., redirect, show message)\r\n    } catch (err: any) {\r\n      this.errorMessage = err?.error?.message || 'Account creation failed';\r\n    } finally {\r\n      this.isLoading = false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;AACA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAKzBC,YAAoBC,EAAe,EAAUC,cAA8B;IAAvD,KAAAD,EAAE,GAAFA,EAAE;IAAuB,KAAAC,cAAc,GAAdA,cAAc;IAH3D,KAAAC,YAAY,GAAW,EAAE;IACzB,KAAAC,SAAS,GAAY,KAAK;IAGxB,IAAI,CAACC,SAAS,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAC7BC,QAAQ,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACnCC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACU,QAAQ,EAAEV,UAAU,CAACW,KAAK,CAAC,CAAC;MACpDC,QAAQ,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ;KACnC,CAAC;EACJ;EAEMG,KAAKA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACT,IAAID,KAAI,CAACP,SAAS,CAACS,OAAO,EAAE;MAC5BF,KAAI,CAACR,SAAS,GAAG,IAAI;MACrBQ,KAAI,CAACT,YAAY,GAAG,EAAE;MACtB,IAAI;QACF,MAAMS,KAAI,CAACV,cAAc,CAACa,aAAa,CAACH,KAAI,CAACP,SAAS,CAACW,KAAK,CAAC,CAACC,SAAS,EAAE;QACzE;OACD,CAAC,OAAOC,GAAQ,EAAE;QACjBN,KAAI,CAACT,YAAY,GAAGe,GAAG,EAAEC,KAAK,EAAEC,OAAO,IAAI,yBAAyB;OACrE,SAAS;QACRR,KAAI,CAACR,SAAS,GAAG,KAAK;;IACvB;EACH;CACD;AA1BYL,cAAc,GAAAsB,UAAA,EAL1BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWzB,cAAc,CA0B1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}