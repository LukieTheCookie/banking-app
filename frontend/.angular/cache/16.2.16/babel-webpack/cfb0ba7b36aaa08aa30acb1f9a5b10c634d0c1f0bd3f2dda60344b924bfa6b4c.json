{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nimport * as i2 from \"@angular/common\";\nfunction AccountComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Name: \", account_r1.accountHolderName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Balance: R\", account_r1.balance, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Transactions: \", account_r1.transactions, \" \");\n  }\n}\nexport class AccountComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.accounts = [];\n    this.name = \"\";\n  }\n  showAccount() {\n    this.accountService.getAccounts().subscribe({\n      next: data => {\n        this.accounts = data;\n        console.log('Accounts received:', this.accounts);\n      },\n      error: err => {\n        console.error('Failed to fetch accounts:', err);\n      }\n    });\n  }\n  ngOnInit() {\n    this.showAccount();\n  }\n  static {\n    this.ɵfac = function AccountComponent_Factory(t) {\n      return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountComponent,\n      selectors: [[\"app-account\"]],\n      decls: 3,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"]],\n      template: function AccountComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1, \"Accounts\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(2, AccountComponent_div_2_Template, 7, 3, \"div\", 0);\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","account_r1","accountHolderName","balance","transactions","AccountComponent","constructor","accountService","accounts","name","showAccount","getAccounts","subscribe","next","data","console","log","error","err","ngOnInit","ɵɵdirectiveInject","i1","AccountService","selectors","decls","vars","consts","template","AccountComponent_Template","rf","ctx","ɵɵtemplate","AccountComponent_div_2_Template","ɵɵproperty"],"sources":["C:\\Users\\lkama\\IdeaProjects\\banking-ui\\src\\app\\components\\account\\account.component.ts","C:\\Users\\lkama\\IdeaProjects\\banking-ui\\src\\app\\components\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Account } from 'src/app/models/account.model';\nimport { AccountService } from 'src/app/services/account.service';\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n    constructor(private accountService: AccountService){}\n    accounts: Account[] = [];\n    name: string = \"\";\n\n    showAccount() {\n    this.accountService.getAccounts().subscribe({\n      next: data => {\n        this.accounts = data;\n        console.log('Accounts received:', this.accounts);\n      },\n      error: err => {\n        console.error('Failed to fetch accounts:', err);\n      }\n    });\n  }\n\n    ngOnInit(): void {\n        this.showAccount();\n    }\n\n}\n","<h1>Accounts</h1>\n\n<div *ngFor=\"let account of accounts\">\n    <div> Name: {{account.accountHolderName}} </div>\n    <div> Balance: R{{account.balance}} </div>\n    <div> Transactions: {{account.transactions}} </div>\n</div>\n"],"mappings":";;;;;ICEAA,EAAA,CAAAC,cAAA,UAAsC;IAC5BD,EAAA,CAAAE,MAAA,GAAoC;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAChDH,EAAA,CAAAC,cAAA,UAAK;IAACD,EAAA,CAAAE,MAAA,GAA8B;IAAAF,EAAA,CAAAG,YAAA,EAAM;IAC1CH,EAAA,CAAAC,cAAA,UAAK;IAACD,EAAA,CAAAE,MAAA,GAAuC;IAAAF,EAAA,CAAAG,YAAA,EAAM;;;;IAF7CH,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAK,kBAAA,YAAAC,UAAA,CAAAC,iBAAA,MAAoC;IACpCP,EAAA,CAAAI,SAAA,GAA8B;IAA9BJ,EAAA,CAAAK,kBAAA,gBAAAC,UAAA,CAAAE,OAAA,MAA8B;IAC9BR,EAAA,CAAAI,SAAA,GAAuC;IAAvCJ,EAAA,CAAAK,kBAAA,oBAAAC,UAAA,CAAAG,YAAA,MAAuC;;;ADGjD,OAAM,MAAOC,gBAAgB;EAEzBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAClC,KAAAC,QAAQ,GAAc,EAAE;IACxB,KAAAC,IAAI,GAAW,EAAE;EAFmC;EAIpDC,WAAWA,CAAA;IACX,IAAI,CAACH,cAAc,CAACI,WAAW,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACN,QAAQ,GAAGM,IAAI;QACpBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACR,QAAQ,CAAC;MAClD,CAAC;MACDS,KAAK,EAAEC,GAAG,IAAG;QACXH,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEC,GAAG,CAAC;MACjD;KACD,CAAC;EACJ;EAEEC,QAAQA,CAAA;IACJ,IAAI,CAACT,WAAW,EAAE;EACtB;;;uBApBSL,gBAAgB,EAAAV,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAAhBjB,gBAAgB;MAAAkB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR7BlC,EAAA,CAAAC,cAAA,SAAI;UAAAD,EAAA,CAAAE,MAAA,eAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAK;UAEjBH,EAAA,CAAAoC,UAAA,IAAAC,+BAAA,iBAIM;;;UAJmBrC,EAAA,CAAAI,SAAA,GAAW;UAAXJ,EAAA,CAAAsC,UAAA,YAAAH,GAAA,CAAAtB,QAAA,CAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}