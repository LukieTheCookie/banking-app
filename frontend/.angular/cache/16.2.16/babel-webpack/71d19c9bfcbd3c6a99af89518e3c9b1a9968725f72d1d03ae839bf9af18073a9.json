{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction AccountComponent_p_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 7);\n    i0.ɵɵtext(1, \" Name is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class AccountComponent {\n  constructor(accountService, fb) {\n    this.accountService = accountService;\n    this.fb = fb;\n    this.accounts = [];\n  }\n  showAccount() {\n    this.accountService.getAccounts().subscribe({\n      next: data => {\n        this.accounts = data;\n        console.log('Accounts received:', this.accounts);\n      },\n      error: err => {\n        console.error('Failed to fetch accounts:', err);\n      }\n    });\n  }\n  createAccount() {\n    if (this.accountForm.valid) {\n      const account = this.accountForm.value;\n      console.log('New Account: ', account);\n      this.accountService.createAccount(account).subscribe({\n        next: data => {\n          console.log(\"Account successfully added!\", data);\n        },\n        error: err => {\n          console.error('Failed to create Account', err);\n        }\n      });\n    }\n  }\n  ngOnInit() {\n    // this.showAccount();\n    this.accountForm = this.fb.group({\n      accountHolderName: ['', Validators.required],\n      balance: [0],\n      userId: [4],\n      transactions: [[]]\n    });\n  }\n  static {\n    this.ɵfac = function AccountComponent_Factory(t) {\n      return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i2.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountComponent,\n      selectors: [[\"app-account\"]],\n      decls: 11,\n      vars: 3,\n      consts: [[1, \"max-w-xl\", \"mx-auto\", \"mt-10\", \"bg-white\", \"p-8\", \"rounded-2xl\", \"shadow-lg\", \"border\", \"border-gray-200\"], [1, \"text-2xl\", \"font-semibold\", \"text-gray-800\", \"mb-6\"], [1, \"space-y-5\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"accountHolderName\", 1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-1\"], [\"type\", \"text\", \"id\", \"accountHolderName\", \"formControlName\", \"accountHolderName\", \"placeholder\", \"e.g. Jane Doe\", 1, \"w-full\", \"px-4\", \"py-2\", \"border\", \"rounded-lg\", \"shadow-sm\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500\", \"focus:border-indigo-500\"], [\"class\", \"text-red-500 text-sm mt-1\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"w-full\", \"bg-indigo-600\", \"hover:bg-indigo-700\", \"text-white\", \"font-semibold\", \"py-2\", \"px-4\", \"rounded-lg\", \"transition\", 3, \"disabled\"], [1, \"text-red-500\", \"text-sm\", \"mt-1\"]],\n      template: function AccountComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Create New Account\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function AccountComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.createAccount();\n          });\n          i0.ɵɵelementStart(4, \"div\")(5, \"label\", 3);\n          i0.ɵɵtext(6, \" Account Holder Name \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵtemplate(8, AccountComponent_p_8_Template, 2, 0, \"p\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 6);\n          i0.ɵɵtext(10, \" Create Account \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.accountForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.accountForm.get(\"accountHolderName\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.accountForm.get(\"accountHolderName\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.accountForm.invalid);\n        }\n      },\n      dependencies: [i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhY2NvdW50LmNvbXBvbmVudC5zY3NzIn0= */\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hY2NvdW50L2FjY291bnQuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9LQUFvSyIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","AccountComponent","constructor","accountService","fb","accounts","showAccount","getAccounts","subscribe","next","data","console","log","error","err","createAccount","accountForm","valid","account","value","ngOnInit","group","accountHolderName","required","balance","userId","transactions","ɵɵdirectiveInject","i1","AccountService","i2","FormBuilder","selectors","decls","vars","consts","template","AccountComponent_Template","rf","ctx","ɵɵlistener","AccountComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","AccountComponent_p_8_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","invalid","touched"],"sources":["C:\\Users\\lkama\\IdeaProjects\\banking-ui\\src\\app\\components\\account\\account.component.ts","C:\\Users\\lkama\\IdeaProjects\\banking-ui\\src\\app\\components\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Account } from 'src/app/models/account.model';\nimport { AccountService } from 'src/app/services/account.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n    accountForm: FormGroup;\n    accounts: Account[] = [];\n    \n    \n    constructor(private accountService: AccountService, private fb: FormBuilder){}\n    \n\n    showAccount() {\n    this.accountService.getAccounts().subscribe({\n      next: data => {\n        this.accounts = data;\n        console.log('Accounts received:', this.accounts);\n      },\n      error: err => {\n        console.error('Failed to fetch accounts:', err);\n      }\n    });\n  }\n\n    createAccount(){\n      if (this.accountForm.valid){\n        const account: Account = this.accountForm.value;\n        console.log('New Account: ', account);\n        this.accountService.createAccount(account).subscribe({\n          next: data => {\n            console.log(\"Account successfully added!\", data);\n          },\n          error: err => {\n          console.error('Failed to create Account', err);\n        }\n        })\n      }\n    }\n\n    ngOnInit(): void {\n        // this.showAccount();\n        this.accountForm = this.fb.group({\n        accountHolderName: ['', Validators.required],\n        balance: [0],\n        userId: [4],\n        transactions: [[]],\n      });\n    }\n\n}\n","<div class=\"max-w-xl mx-auto mt-10 bg-white p-8 rounded-2xl shadow-lg border border-gray-200\">\n  <h2 class=\"text-2xl font-semibold text-gray-800 mb-6\">Create New Account</h2>\n\n  <form [formGroup]=\"accountForm\" (ngSubmit)=\"createAccount()\" class=\"space-y-5\">\n\n    <!-- Account Holder Name -->\n    <div>\n      <label for=\"accountHolderName\" class=\"block text-sm font-medium text-gray-700 mb-1\">\n        Account Holder Name\n      </label>\n      <input\n        type=\"text\"\n        id=\"accountHolderName\"\n        formControlName=\"accountHolderName\"\n        placeholder=\"e.g. Jane Doe\"\n        class=\"w-full px-4 py-2 border rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500\"\n      />\n      <p *ngIf=\"accountForm.get('accountHolderName')?.invalid && accountForm.get('accountHolderName')?.touched\"\n         class=\"text-red-500 text-sm mt-1\">\n        Name is required.\n      </p>\n    </div>\n\n    <!-- Submit Button -->\n    <button\n      type=\"submit\"\n      [disabled]=\"accountForm.invalid\"\n      class=\"w-full bg-indigo-600 hover:bg-indigo-700 text-white font-semibold py-2 px-4 rounded-lg transition\"\n    >\n      Create Account\n    </button>\n\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}