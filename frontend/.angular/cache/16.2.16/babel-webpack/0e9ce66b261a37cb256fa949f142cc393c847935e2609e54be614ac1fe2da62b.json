{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/account.service\";\nexport class AccountComponent {\n  constructor(accountService) {\n    this.accountService = accountService;\n    this.accounts = [];\n  }\n  showAccount() {\n    this.accountService.getAccounts().subscribe({\n      next: data => {\n        this.accounts = data;\n        console.log('Accounts received:', this.accounts);\n      },\n      error: err => {\n        console.error('Failed to fetch accounts:', err);\n      }\n    });\n  }\n  ngOnInit() {\n    this.showAccount();\n  }\n  static {\n    this.ɵfac = function AccountComponent_Factory(t) {\n      return new (t || AccountComponent)(i0.ɵɵdirectiveInject(i1.AccountService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AccountComponent,\n      selectors: [[\"app-account\"]],\n      decls: 8,\n      vars: 1,\n      template: function AccountComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1, \"Accounts\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\")(3, \"a\");\n          i0.ɵɵtext(4, \" Hello Worlds! \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\")(6, \"a\");\n          i0.ɵɵtext(7);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵtextInterpolate(ctx.accounts);\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["AccountComponent","constructor","accountService","accounts","showAccount","getAccounts","subscribe","next","data","console","log","error","err","ngOnInit","i0","ɵɵdirectiveInject","i1","AccountService","selectors","decls","vars","template","AccountComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\lkama\\IdeaProjects\\banking-ui\\src\\app\\components\\account\\account.component.ts","C:\\Users\\lkama\\IdeaProjects\\banking-ui\\src\\app\\components\\account\\account.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Account } from 'src/app/models/account.model';\nimport { AccountService } from 'src/app/services/account.service';\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.component.html',\n  styleUrls: ['./account.component.scss']\n})\nexport class AccountComponent implements OnInit {\n\n    constructor(private accountService: AccountService){}\n    accounts: Account[] = [];\n\n    showAccount() {\n    this.accountService.getAccounts().subscribe({\n      next: data => {\n        this.accounts = data;\n        console.log('Accounts received:', this.accounts);\n      },\n      error: err => {\n        console.error('Failed to fetch accounts:', err);\n      }\n    });\n  }\n\n    ngOnInit(): void {\n        this.showAccount();\n    }\n\n}\n","<p>Accounts</p>\n\n<div>\n    <a>\n        Hello Worlds!\n    </a>\n    <div>\n        <a>{{accounts}}</a>\n    </div>\n</div>\n"],"mappings":";;AAQA,OAAM,MAAOA,gBAAgB;EAEzBC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAClC,KAAAC,QAAQ,GAAc,EAAE;EAD4B;EAGpDC,WAAWA,CAAA;IACX,IAAI,CAACF,cAAc,CAACG,WAAW,EAAE,CAACC,SAAS,CAAC;MAC1CC,IAAI,EAAEC,IAAI,IAAG;QACX,IAAI,CAACL,QAAQ,GAAGK,IAAI;QACpBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACP,QAAQ,CAAC;MAClD,CAAC;MACDQ,KAAK,EAAEC,GAAG,IAAG;QACXH,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEC,GAAG,CAAC;MACjD;KACD,CAAC;EACJ;EAEEC,QAAQA,CAAA;IACJ,IAAI,CAACT,WAAW,EAAE;EACtB;;;uBAnBSJ,gBAAgB,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;IAAA;EAAA;;;YAAhBjB,gBAAgB;MAAAkB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCR7BT,EAAA,CAAAW,cAAA,QAAG;UAAAX,EAAA,CAAAY,MAAA,eAAQ;UAAAZ,EAAA,CAAAa,YAAA,EAAI;UAEfb,EAAA,CAAAW,cAAA,UAAK;UAEGX,EAAA,CAAAY,MAAA,sBACJ;UAAAZ,EAAA,CAAAa,YAAA,EAAI;UACJb,EAAA,CAAAW,cAAA,UAAK;UACEX,EAAA,CAAAY,MAAA,GAAY;UAAAZ,EAAA,CAAAa,YAAA,EAAI;;;UAAhBb,EAAA,CAAAc,SAAA,GAAY;UAAZd,EAAA,CAAAe,iBAAA,CAAAL,GAAA,CAAArB,QAAA,CAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}